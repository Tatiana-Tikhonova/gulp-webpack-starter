// встроенный математический модуль scss
@use "sass:math" as math;
// ===========================подключение шрифтов

@mixin fonts($font_name, $file_name, $weight, $style) {
	@font-face {
		font-family: $font_name;
		font-display: swap;
		src: url("../fonts/#{$file_name}.woff") format("woff"),
		url("../fonts/#{$file_name}.woff2") format("woff2");
		font-weight: #{$weight};
		font-style: #{$style};
	}
}

@import "_fonts";

// подключение стилей иконочного шрифта
@import "_icons";
// ===========================переменные
// шрифты
$mainFont: "Roboto-Regular", sans-serif;
// корневой размер шрифта для тега html и функции rem()
$rem: 16;
// цвета
$clr-black: #231f20;
$clr-white: #ffffff;
$clr-red: #ec2b2f;
$clr-blue: #0073b7;
// $hover-blue: #379edb;
$hover-blue: darken(#0073b7, 7%);
$hover-red: darken(#ec2b2f, 7%);

$shadow-blue: 4px 8px 10px rgba(0, 115, 183, 0.15);
$shadow-light: 0px 0px 10px rgba(35, 31, 32, 0.1);

$border-radius: 5px;
$transition: 0.3s;

// экран, контейнер и брейкпойнты
$minwidth: 320px;
$maxScreenWidth: 1920px;
$maxContainerWidth: 1320px;
$md1: $maxContainerWidth;
$md2: 1200px;
$md3: 992px;
$md4: 768px;
$md5: 576px;
$md6: 480px;
// боковые поля
$fiels: 12px;
// половина межколоночника
$gap: math.div(24, 2) + px;
// если нужна поддержка браузеров не понимающих css vars ( с откатом)
/**
значения разделенные запятыми внутри scss map вызывают ошибку компиляции
поэтому создаем для них отдельные переменные, а потом присваиваем эти переменные
в качестве значений для ключей scss map
*/
// $ff-header: "Roboto-Bold", sans-serif;
// $ff-medium: "Roboto-Medium", sans-serif;
// $ff-main: "Roboto-Regular", sans-serif;
// // scss map obj
// $vars :(ff-header: $headerFont,
//     ff-medium: $ff-medium,
//     ff-main: $ff-main,
//     clr-text: #151a1b,
//     clr-primary: #509900,
//     clr-accent: #f84e1d,
//     clr-dark: #364446,
//     clr-dark-lighten: lighten(#364446, 30%),
//     clr-light: #ffffff,
//     shadow-primary: 0px 0px 10px rgba(80, 153, 0, 0.7),
// );

// :root {

//     @each $prop,
//     $val in $vars {
//         --#{$prop}: #{$val};
//     }
// }

// @mixin var($prop, $variable) {
//     #{$prop}: map-get($vars, $variable);
//     #{$prop}: var(--#{$variable});
// }

// если поддерживаем только нормальные браузеры
:root {
    --ff-header: "Roboto-Bold", sans-serif;
    --ff-medium: "Roboto-Medium", sans-serif;
    --ff-main: "Roboto-Regular", sans-serif;
    --clr-text: #151a1b;
    --clr-primary: #509900;
    --clr-accent: #f84e1d;
    --clr-dark: #364446;
    --clr-dark-lighten: lighten(#364446, 30%);
    --clr-light: #ffffff;
    --light-blue-grey: #d7e0e2;
    --clr-woo-green: #0f834d;
    --clr-woo-blue: #3d9cd2;
    --clr-woo-orange: #e2401c;
    --clr-woo-red: #f00;
    --shadow-block: 0px 0px 10px rgba(54, 68, 70, 0.2);
    --shadow-primary: 0px 0px 10px rgba(80, 153, 0, 0.7);
    --shadow-accent: 0px 0px 10px rgba(248, 78, 29, 0.7);
    --fz-text: 1rem;
    --fz-h1: 4rem;
}


// ================================mixins
/*
создание треугольника
размеры и форма треугольника зависят от толщины бордера с каждой стороны
*/
@mixin triangle($size, $side, $clr) {
	border-width: $size;
	border-style: solid;
	border-color: transparent;
	border-#{$side}-color: $clr;
}

// ширина элемента в % от родителя
@mixin percentage-width($el-width, $parent-width) {
	width: math.div($el-width, $parent-width) * 100%;
}

// любое свойство + значение элемента в % от родителя
@mixin percentage-value($property, $el-width, $parent-width) {
	#{$property}: math.div($el-width, $parent-width) * 100%;
}

// максимальная ширина элемента в % от родителя
@mixin percentage-max-width($el-width, $parent-width) {
	max-width: math.div($el-width, $parent-width) * 100%;
}

// flex-basis элемента в % от родителя
@mixin percentage-flex($el-width, $parent-width) {
	flex-basis: math.div($el-width, $parent-width) * 100%;
}

// ширина элемента в % от родителя по кол-ву колонок, которые он занимает в макете
@mixin columns-width($columns) {
	width: math.div(100%, $columns);
}

// миксины для флексов
@mixin row-margins() {
	margin-left: -$gap;
	margin-right: -$gap;
}

@mixin col-paddings() {
	padding-left: $gap;
	padding-right: $gap;
}

@mixin col-margins() {
	margin-left: $gap;
	margin-right: $gap;
}

//=====================================Functions==========================================
// функция для перевода размера из пикселей в em
@function em($sz, $fsz) {
	$val: math.div($sz, $fsz)+em;
	@return $val;
}


// функция для перевода размера из пикселей в rem
@function rem($sz, $rem) {
	$val: math.div($sz, $rem)+rem;
	@return $val;
}
